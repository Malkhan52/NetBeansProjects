/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sqlclientapp;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.JTableHeader;
/**
 *
 * @author admin
 */
public class SQLClientAppGUI extends javax.swing.JFrame {
    private String jdbcDriver;
    private String databaseUrl;
    private String username;
    private String password;
    private String sqlCommand;
    private ResultSet dataSet;
    private ResultSetMetaData metaData;
    private Connection con;
    /**
     * Creates new form SQLClientAppGUI
     */
    public SQLClientAppGUI() {
        initComponents();
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textUsername = new javax.swing.JTextField();
        textPassword = new javax.swing.JPasswordField();
        menuDatabaseURL = new javax.swing.JComboBox<>();
        menuJdbcDriver = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textSqlCommand = new javax.swing.JTextArea();
        labelConnectionStatus = new javax.swing.JLabel();
        btnConnectToDatabase = new javax.swing.JButton();
        btnClearSqlCommand = new javax.swing.JButton();
        btnExecuteSQLCommand = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnClearResultWindow = new javax.swing.JButton();
        noticeBoard = new javax.swing.JLabel();
        btnClearResultWindow1 = new javax.swing.JButton();
        paneResultWindow = new javax.swing.JScrollPane();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Enter Database Information");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("JDBC Driver");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Database URL");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Username");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Password");

        textUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textUsernameActionPerformed(evt);
            }
        });

        menuDatabaseURL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        menuDatabaseURL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "jdbc:mysql://localhost:3306/project3?" }));
        menuDatabaseURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDatabaseURLActionPerformed(evt);
            }
        });

        menuJdbcDriver.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        menuJdbcDriver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "com.mysql.jdbc.Driver" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("Enter An SQL Command");

        textSqlCommand.setColumns(20);
        textSqlCommand.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        textSqlCommand.setRows(5);
        jScrollPane1.setViewportView(textSqlCommand);

        labelConnectionStatus.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        labelConnectionStatus.setForeground(new java.awt.Color(204, 0, 0));
        labelConnectionStatus.setText("Connection Status");

        btnConnectToDatabase.setBackground(new java.awt.Color(204, 204, 255));
        btnConnectToDatabase.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnConnectToDatabase.setForeground(new java.awt.Color(0, 0, 153));
        btnConnectToDatabase.setText("Connect to Database");
        btnConnectToDatabase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConnectToDatabaseMouseClicked(evt);
            }
        });

        btnClearSqlCommand.setBackground(new java.awt.Color(204, 204, 255));
        btnClearSqlCommand.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnClearSqlCommand.setForeground(new java.awt.Color(204, 153, 0));
        btnClearSqlCommand.setText("Clear SQL Command");
        btnClearSqlCommand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearSqlCommandMouseClicked(evt);
            }
        });

        btnExecuteSQLCommand.setBackground(new java.awt.Color(204, 204, 255));
        btnExecuteSQLCommand.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnExecuteSQLCommand.setForeground(new java.awt.Color(0, 102, 0));
        btnExecuteSQLCommand.setText("Execute SQL Command");
        btnExecuteSQLCommand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExecuteSQLCommandMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("SQL Execution Result Window");

        btnClearResultWindow.setBackground(new java.awt.Color(204, 204, 255));
        btnClearResultWindow.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnClearResultWindow.setForeground(new java.awt.Color(204, 153, 0));
        btnClearResultWindow.setText("Clear Result Window");
        btnClearResultWindow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearResultWindowMouseClicked(evt);
            }
        });

        noticeBoard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noticeBoard.setForeground(new java.awt.Color(255, 102, 0));
        noticeBoard.setMaximumSize(new java.awt.Dimension(300, 100));

        btnClearResultWindow1.setBackground(new java.awt.Color(204, 204, 255));
        btnClearResultWindow1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        btnClearResultWindow1.setForeground(new java.awt.Color(153, 0, 0));
        btnClearResultWindow1.setText("Close Connection");
        btnClearResultWindow1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearResultWindow1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paneResultWindow)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(menuDatabaseURL, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(menuJdbcDriver, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textPassword))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(18, 18, 18)
                                    .addComponent(noticeBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelConnectionStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnConnectToDatabase)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearSqlCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnClearResultWindow)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnClearResultWindow1)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnExecuteSQLCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(menuJdbcDriver, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(menuDatabaseURL, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(noticeBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelConnectionStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExecuteSQLCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConnectToDatabase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearSqlCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneResultWindow, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearResultWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearResultWindow1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textUsernameActionPerformed

    private void menuDatabaseURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDatabaseURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuDatabaseURLActionPerformed

    private void btnConnectToDatabaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConnectToDatabaseMouseClicked
        // TODO add your handling code here:
        jdbcDriver = menuJdbcDriver.getSelectedItem().toString();
        databaseUrl = menuDatabaseURL.getSelectedItem().toString();
        username = textUsername.getText();
        password = new String(textPassword.getPassword());
        String noticeMsg = "Please provide these details: ";
        Boolean isMissing = false;
        if(jdbcDriver.equals("Select")){
            noticeMsg += "JDBC Driver, ";
            isMissing = true;
        }
        if(databaseUrl.equals("Select")){
            noticeMsg += "Database, ";
            isMissing = true;
        }
        if(username.equals("")){
            noticeMsg += "Username, ";
            isMissing = true;
        }
        if(password.equals("")){
            noticeMsg += "Password.";
            isMissing = true;
        }
        if(isMissing){
            noticeBoard.setText(noticeMsg);
            return;
        }
        
        try{
            con = DriverManager.getConnection(databaseUrl, username, password);
            labelConnectionStatus.setText("Connected to "+databaseUrl);
            noticeBoard.setText("Connection established successfully!");
        }
        catch(SQLException e){
//            e.printStackTrace();
            labelConnectionStatus.setText("Connection faieled to "+databaseUrl);
            noticeBoard.setText("Connection failed!");
        }
    }//GEN-LAST:event_btnConnectToDatabaseMouseClicked

    private void btnClearSqlCommandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearSqlCommandMouseClicked
        // TODO add your handling code here:
        textSqlCommand.setText("");
        noticeBoard.setText("");
    }//GEN-LAST:event_btnClearSqlCommandMouseClicked

    private void btnExecuteSQLCommandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExecuteSQLCommandMouseClicked
        // TODO add your handling code here:
        
        sqlCommand = textSqlCommand.getText();
        if(sqlCommand.equals("")){
            noticeBoard.setText("Please enter SQL command!");
            return;
        }
        int pos = sqlCommand.indexOf(' ');
        String word = sqlCommand.substring(0, pos);
        word = word.toLowerCase();
        if(word.equals("select")){
            try{
            // Creating the Statement
                Statement stmt = con.createStatement();
                //Retrieving data
                dataSet = stmt.executeQuery(sqlCommand);
                metaData = dataSet.getMetaData();
                int cols = metaData.getColumnCount();
                dataSet.last();
                int rows = dataSet.getRow();
                dataSet.first();
                String columns[] = new String[cols];
                String data[][] = new String[rows][cols];
                for(int i=1;i<=cols;++i){
                    columns[i-1] = metaData.getColumnName(i);
                }
                
                for(int j=0;j<rows;++j){
                    for(int i=1;i<=cols;++i){
                        data[j][i-1] = dataSet.getString(i);
                    }
                    dataSet.next();
                }
                         
            JTable table=new JTable(data,columns);
            table.setFont(new java.awt.Font("Tahoma", 1, 15));
            JTableHeader tableHeader = table.getTableHeader();
            tableHeader.setFont(new java.awt.Font("Tahoma", 1, 15));
            noticeBoard.setText("Total rows: "+String.valueOf(rows));
            paneResultWindow.getViewport().add(table);
            
            }catch(SQLException e){
//                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "<html><font face='Tahoma' size='10' color='red'>"+e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                noticeBoard.setText("Failed to execute this command");
            }
        }
        else if(word.equals("update") || word.equals("delete") || word.equals("insert")){
            try{
                Statement stmt = con.createStatement();
                int rows = stmt.executeUpdate(sqlCommand);
                noticeBoard.setText("Rows updated: "+String.valueOf(rows));
            }catch(SQLException e){
//                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "<html><font face='Tahoma' size='15' color='red'>"+e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                noticeBoard.setText("Failed to execute this command");
            }
        }
    }//GEN-LAST:event_btnExecuteSQLCommandMouseClicked

    private void btnClearResultWindowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearResultWindowMouseClicked
        // TODO add your handling code here:
        JLabel jlabel = new JLabel("");
        paneResultWindow.getViewport().add(jlabel);
        noticeBoard.setText("");
    }//GEN-LAST:event_btnClearResultWindowMouseClicked

    private void btnClearResultWindow1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearResultWindow1MouseClicked
        // TODO add your handling code here:
        try{
            if(!con.isClosed()){
                con.close();
                labelConnectionStatus.setText("No Connection Now");
                noticeBoard.setText("Connection closed successfully!");
            }
        }catch(Exception e){
//            e.printStackTrace();
            noticeBoard.setText("Failed to close connection");
        }
    }//GEN-LAST:event_btnClearResultWindow1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SQLClientAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SQLClientAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SQLClientAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SQLClientAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SQLClientAppGUI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearResultWindow;
    private javax.swing.JButton btnClearResultWindow1;
    private javax.swing.JButton btnClearSqlCommand;
    private javax.swing.JButton btnConnectToDatabase;
    private javax.swing.JButton btnExecuteSQLCommand;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelConnectionStatus;
    private javax.swing.JComboBox<String> menuDatabaseURL;
    private javax.swing.JComboBox<String> menuJdbcDriver;
    private javax.swing.JLabel noticeBoard;
    private javax.swing.JScrollPane paneResultWindow;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextArea textSqlCommand;
    private javax.swing.JTextField textUsername;
    // End of variables declaration//GEN-END:variables
}
